--- a/arch/arm/mm/mmu.c
+++ b/arch/arm/mm/mmu.c
@@ -453,15 +453,9 @@
 		ecc_mask = 0;
 	}
 
-	if (is_smp()) {
-		if (cachepolicy != CPOLICY_WRITEALLOC) {
-			pr_warn("Forcing write-allocate cache policy for SMP\n");
-			cachepolicy = CPOLICY_WRITEALLOC;
-		}
-		if (!(initial_pmd_value & PMD_SECT_S)) {
-			pr_warn("Forcing shared mappings for SMP\n");
-			initial_pmd_value |= PMD_SECT_S;
-		}
+	if (cachepolicy != CPOLICY_WRITEALLOC) {
+		pr_warn("Forcing write-allocate cache policy for Armada\n");
+		cachepolicy = CPOLICY_WRITEALLOC;
 	}
 
 	/*
--- a/arch/arm/mach-mvebu/coherency.c
+++ b/arch/arm/mach-mvebu/coherency.c
@@ -226,8 +226,6 @@
 	 * where we don't know yet on which SoC we are running.
 
 	 */
-	if (!is_smp())
-		return COHERENCY_FABRIC_TYPE_NONE;
 
 	np = of_find_matching_node_and_match(NULL, of_coherency_table, &match);
 	if (!np)
--- a/arch/arm/mm/cache-l2x0.c
+++ b/arch/arm/mm/cache-l2x0.c
@@ -1497,7 +1497,7 @@
 	l2_wt_override = of_property_read_bool(np, "wt-override");
 
 	if (l2_wt_override) {
-		val |= AURORA_ACR_FORCE_WRITE_THRO_POLICY;
+		val |= AURORA_ACR_FORCE_WRITE_POLICY_DIS;
 		mask |= AURORA_ACR_FORCE_WRITE_POLICY_MASK;
 	}
 
--- a/arch/arm/include/asm/hardware/cache-aurora-l2.h
+++ b/arch/arm/include/asm/hardware/cache-aurora-l2.h
@@ -29,7 +29,7 @@
 #define AURORA_ACR_REPLACEMENT_TYPE_LFSR     \
 	(1 << AURORA_ACR_REPLACEMENT_OFFSET)
 #define AURORA_ACR_REPLACEMENT_TYPE_SEMIPLRU \
-	(3 << AURORA_ACR_REPLACEMENT_OFFSET)
+	(2 << AURORA_ACR_REPLACEMENT_OFFSET)
 
 #define AURORA_ACR_PARITY_EN	(1 << 21)
 #define AURORA_ACR_ECC_EN	(1 << 20)
